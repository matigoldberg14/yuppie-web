---
// src/pages/rating.astro
import Layout from '../layouts/Layout.astro';
import { RatingForm } from '../components/feedback/Rating';
import { getRestaurant, incrementTaps } from '../services/api';
import { RatingSkeleton } from '../components/skeletons/FeedbackSkeleton';
import { preloadData } from '../utils/performance';

const documentId = Astro.url.searchParams.get('local');
if (!documentId) {
  return Astro.redirect('/404');
}

let restaurant;
try {
  restaurant = await getRestaurant(documentId);
  if (!restaurant) {
    throw new Error('Restaurant not found');
  }

  // Incrementar taps solo una vez
  await incrementTaps(documentId);
} catch (error) {
  console.error('Error in rating:', error);
  return Astro.redirect('/404');
}
---

<Layout title="Califica tu experiencia">
  <div class="min-h-screen bg-gradient flex flex-col items-center justify-center p-4">
    <div class="w-full max-w-md">
      <h1 class="text-4xl font-bold mb-6 text-center text-shadow">
        {restaurant.name}
      </h1>
      
      <div class="card p-6">
        <h2 class="text-2xl font-semibold mb-4 text-center">Califica tu experiencia</h2>
        <div id="rating-container" class="hidden">
          <RatingForm 
            client:load 
            restaurantId={documentId}
            nextUrl={`/improvement?local=${documentId}`}
            linkMaps={restaurant.linkMaps}
          />
        </div>
        <div id="skeleton-container">
          <RatingSkeleton />
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  // Mostrar el componente real y ocultar el skeleton
  const showRating = () => {
    const container = document.getElementById('rating-container');
    const skeleton = document.getElementById('skeleton-container');
    
    if (container && skeleton) {
      container.classList.remove('hidden');
      skeleton.classList.add('hidden');
    }
  };

  // Esperar a que los componentes estÃ©n listos
  document.addEventListener('DOMContentLoaded', () => {
    setTimeout(showRating, 100);
  });
</script>

<style>
  .card {
    transition: transform 0.3s ease;
  }
  .card:hover {
    transform: translateY(-5px);
  }
  
  /* Optimizaciones de CSS */
  .text-shadow {
    text-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }
  
  @media (prefers-reduced-motion: reduce) {
    .card {
      transition: none;
    }
    .card:hover {
      transform: none;
    }
  }
</style>
---
// src/layouts/Layout.astro (modificado)
import { ViewTransitions } from 'astro:transitions';
import { SEO } from 'astro-seo';
import '../styles/globals.css';
import emailjs from '@emailjs/browser';
import Analytics from '@vercel/analytics/astro';
import { UserNav } from '../components/user/UserNav';
import { UserAuthProvider } from '../lib/UserAuthContext';


emailjs.init("3wONTqDb8Fwtqf1P0");

interface Props {
  title: string;
  description?: string;
  image?: string;
  noindex?: boolean;
}

const { 
  title, 
  description = "Yuppie - Mejora la experiencia de tus clientes con feedback en tiempo real",
  image = "/og-image.jpg",
  noindex = false
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, 'https://yuppiecx.com.ar');
---

<!DOCTYPE html>
<html lang="es" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <link rel="icon" type="image/png" href="/favicon.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="/favicon-16x16.png" sizes="16x16" />
    <link rel="manifest" href="/site.webmanifest">
    
    <SEO
      title={title}
      description={description}
      canonical={canonicalURL.toString()}
      noindex={noindex}
      openGraph={{
        basic: {
          title,
          type: "website",
          image,
        },
        image: {
          alt: "Yuppie Preview Image",
        },
      }}
      twitter={{
        creator: "@yuppie",
        card: "summary_large_image",
      }}
    />

    <!-- Fonts -->
    <link
      rel="preload"
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap"
      as="style"
      onload="this.onload=null;this.rel='stylesheet'"
    />

    <ViewTransitions />

    <style is:inline>
      :root {
        --blue-primary: #2F02CC;
        --blue-light: #5F50E5;
        --blue-dark: #1D0158;
      }
      
      .bg-gradient {
        background: linear-gradient(135deg, var(--blue-primary), var(--blue-dark));
      }
      
      .text-shadow {
        text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
      }
      
      .card {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border-radius: 16px;
        box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
      }
      
      @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
      }
      .animate-fadeIn {
        animation: fadeIn 0.3s ease-in-out forwards;
      }
    </style>
    </head>
    <body class="min-h-screen bg-gradient font-['Poppins',sans-serif] text-white">
      <!-- Header con navegaciÃ³n de usuario -->
      <header class="fixed top-0 left-0 w-full z-40 transition-all duration-300 backdrop-blur-sm">
        <div class="container mx-auto px-4 h-16 flex items-center justify-between">
          <!-- Logo -->
          <a href="/" class="flex items-center space-x-2">
            <img 
              src="/logo_grande.png" 
              alt="Yuppie Logo" 
              class="h-8 w-auto"
              width="128"
              height="32"
            />
          </a>
          
          <!-- User Navigation -->
          <div class="flex items-center space-x-4">
            <UserAuthProvider client:load>
              <UserNav client:load />
            </UserAuthProvider>
          </div>
        </div>
      </header>
      
      <!-- Envolver todo el contenido con UserAuthProvider -->
      <UserAuthProvider client:load>
        <slot />
      </UserAuthProvider>
  
      <!-- Progress Bar -->
      <div id="progress-bar" class="fixed top-0 left-0 h-1 bg-white/20 w-full z-50">
        <div class="h-full bg-white transform-origin-left"></div>
      </div>
  

    <script>
      // Progress Bar
      document.addEventListener('astro:page-load', () => {
        const progressBar = document.querySelector('#progress-bar div') as HTMLElement;
        if (progressBar) {
          window.addEventListener('scroll', () => {
            const winScroll = document.documentElement.scrollTop;
            const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;
            const scrolled = (winScroll / height) * 100;
            progressBar.style.width = `${scrolled}%`;
          });
        }
        
        // Header scroll effect
        const header = document.querySelector('header');
        if (header) {
          const handleScroll = () => {
            if (window.scrollY > 50) {
              header.classList.add('bg-black/50');
            } else {
              header.classList.remove('bg-black/50');
            }
          };
          window.addEventListener('scroll', handleScroll);
          handleScroll(); // Apply initial state
        }
      });
    </script>
    
    <Analytics />
  </body>
</html>